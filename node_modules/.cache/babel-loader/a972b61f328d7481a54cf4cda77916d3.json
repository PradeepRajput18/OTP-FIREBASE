{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satya\\\\OneDrive\\\\New One Drive\\\\OneDrive\\\\Desktop\\\\Assignment\\\\firebase-auth-methods\\\\phone-otp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\"; // react router\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"; //components\n\nimport SignIn from \"./components/SignIn\";\nimport Home from \"./components/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [viewOtpForm, setViewOtpForm] = useState(false);\n  const [user, setUser] = useState(false);\n  const firebaseConfig = {\n    apiKey: \"AIzaSyBPlUUoZRP4LhuXUsv_0WgSMtj2du5DI5k\",\n    authDomain: \"trackman-bysavio.firebaseapp.com\",\n    projectId: \"trackman-bysavio\",\n    storageBucket: \"trackman-bysavio.appspot.com\",\n    messagingSenderId: \"540424581903\",\n    appId: \"1:540424581903:web:1149938fd35dccc859047a\",\n    measurementId: \"G-LPHWV1CQWG\"\n  };\n  useEffect(() => {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\", {\n      size: \"invisible\",\n      callback: function (response) {\n        console.log(\"Captcha Resolved\");\n        this.onSignInSubmit();\n      },\n      defaultCountry: \"IN\"\n    });\n  }, []);\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  } else {\n    firebase.app(); // if already initialized, use that one\n  }\n\n  const auth = firebase.auth();\n  auth.onAuthStateChanged(user => {\n    if (user) {\n      setUser(user);\n    }\n  });\n\n  const loginSubmit = e => {\n    e.preventDefault();\n    let phone_number = \"+91\" + e.target.phone.value;\n    const appVerifier = window.recaptchaVerifier;\n    auth.signInWithPhoneNumber(phone_number, appVerifier).then(confirmationResult => {\n      // SMS sent. Prompt user to type the code from the message, then sign the\n      // user in with confirmationResult.confirm(code).\n      console.log(\"otp sent\");\n      setViewOtpForm(true);\n      window.confirmationResult = confirmationResult; // ...\n    }).catch(error => {\n      // Error; SMS not sent\n      // ...\n      alert(error.message);\n    });\n  };\n\n  const otpSubmit = e => {\n    e.preventDefault();\n    let opt_number = e.target.otp_value.value;\n    window.confirmationResult.confirm(opt_number).then(confirmationResult => {\n      console.log(confirmationResult);\n      console.log(\"success\");\n      window.open(\"/\", \"_self\");\n    }).catch(error => {\n      // User couldn't sign in (bad verification code?)\n      alert(error.message);\n    });\n  };\n\n  const signOut = () => {\n    firebase.auth().signOut().then(() => {\n      window.open(\"/signin\", \"_self\");\n    }).catch(error => {\n      // An error happened.\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          signOut: signOut,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signin\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(SignIn, {\n          loginSubmit: loginSubmit,\n          otpSubmit: otpSubmit,\n          viewOtpForm: viewOtpForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ZrHH9yGSTnVX5bp74lwNE6N6c24=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/satya/OneDrive/New One Drive/OneDrive/Desktop/Assignment/firebase-auth-methods/phone-otp/src/App.js"],"names":["React","useEffect","useState","firebase","BrowserRouter","Router","Route","Switch","SignIn","Home","App","viewOtpForm","setViewOtpForm","user","setUser","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","window","recaptchaVerifier","auth","RecaptchaVerifier","size","callback","response","console","log","onSignInSubmit","defaultCountry","apps","length","initializeApp","app","onAuthStateChanged","loginSubmit","e","preventDefault","phone_number","target","phone","value","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","error","alert","message","otpSubmit","opt_number","otp_value","confirm","open","signOut"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\n// react router\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n//components\r\nimport SignIn from \"./components/SignIn\";\r\nimport Home from \"./components/Home\";\r\n\r\nconst App = () => {\r\n  const [viewOtpForm, setViewOtpForm] = useState(false);\r\n  const [user, setUser] = useState(false);\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyBPlUUoZRP4LhuXUsv_0WgSMtj2du5DI5k\",\r\n    authDomain: \"trackman-bysavio.firebaseapp.com\",\r\n    projectId: \"trackman-bysavio\",\r\n    storageBucket: \"trackman-bysavio.appspot.com\",\r\n    messagingSenderId: \"540424581903\",\r\n    appId: \"1:540424581903:web:1149938fd35dccc859047a\",\r\n    measurementId: \"G-LPHWV1CQWG\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n      \"recaptcha-container\",\r\n      {\r\n        size: \"invisible\",\r\n        callback: function (response) {\r\n          console.log(\"Captcha Resolved\");\r\n          this.onSignInSubmit();\r\n        },\r\n        defaultCountry: \"IN\",\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n  } else {\r\n    firebase.app(); // if already initialized, use that one\r\n  }\r\n\r\n  const auth = firebase.auth();\r\n\r\n  auth.onAuthStateChanged((user) => {\r\n    if (user) {\r\n      setUser(user);\r\n    }\r\n  });\r\n\r\n  const loginSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let phone_number = \"+91\" + e.target.phone.value;\r\n    const appVerifier = window.recaptchaVerifier;\r\n\r\n    auth\r\n      .signInWithPhoneNumber(phone_number, appVerifier)\r\n      .then((confirmationResult) => {\r\n        // SMS sent. Prompt user to type the code from the message, then sign the\r\n        // user in with confirmationResult.confirm(code).\r\n        console.log(\"otp sent\");\r\n        setViewOtpForm(true);\r\n        window.confirmationResult = confirmationResult;\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Error; SMS not sent\r\n        // ...\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const otpSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let opt_number = e.target.otp_value.value;\r\n\r\n    window.confirmationResult\r\n      .confirm(opt_number)\r\n      .then((confirmationResult) => {\r\n        console.log(confirmationResult);\r\n        console.log(\"success\");\r\n        window.open(\"/\", \"_self\");\r\n      })\r\n      .catch((error) => {\r\n        // User couldn't sign in (bad verification code?)\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const signOut = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        window.open(\"/signin\", \"_self\");\r\n      })\r\n      .catch((error) => {\r\n        // An error happened.\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div id=\"recaptcha-container\"></div>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Home signOut={signOut} user={user} />\r\n        </Route>\r\n        <Route path=\"/signin\" exact>\r\n          <SignIn\r\n            loginSubmit={loginSubmit}\r\n            otpSubmit={otpSubmit}\r\n            viewOtpForm={viewOtpForm}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}